add_test( [==[Coord comparisons work correctly]==] /home/lauri/algolab/tests/tests [==[Coord comparisons work correctly]==]  )
set_tests_properties( [==[Coord comparisons work correctly]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Coord sum works]==] /home/lauri/algolab/tests/tests [==[Coord sum works]==]  )
set_tests_properties( [==[Coord sum works]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[All neighbours are different]==] /home/lauri/algolab/tests/tests [==[All neighbours are different]==]  )
set_tests_properties( [==[All neighbours are different]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Game can be generated with valid parameters]==] /home/lauri/algolab/tests/tests [==[Game can be generated with valid parameters]==]  )
set_tests_properties( [==[Game can be generated with valid parameters]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Game cannot be generated with faulty parameters]==] /home/lauri/algolab/tests/tests [==[Game cannot be generated with faulty parameters]==]  )
set_tests_properties( [==[Game cannot be generated with faulty parameters]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[in_bounds works correctly]==] /home/lauri/algolab/tests/tests [==[in_bounds works correctly]==]  )
set_tests_properties( [==[in_bounds works correctly]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Correct number of mines on board]==] /home/lauri/algolab/tests/tests [==[Correct number of mines on board]==]  )
set_tests_properties( [==[Correct number of mines on board]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Seeded board generation works expectedly]==] /home/lauri/algolab/tests/tests [==[Seeded board generation works expectedly]==]  )
set_tests_properties( [==[Seeded board generation works expectedly]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Game is over and lost when mined square is opened]==] /home/lauri/algolab/tests/tests [==[Game is over and lost when mined square is opened]==]  )
set_tests_properties( [==[Game is over and lost when mined square is opened]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Game is not over when free square is opened]==] /home/lauri/algolab/tests/tests [==[Game is not over when free square is opened]==]  )
set_tests_properties( [==[Game is not over when free square is opened]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Game is over and won when no more unopened free squares remain]==] /home/lauri/algolab/tests/tests [==[Game is over and won when no more unopened free squares remain]==]  )
set_tests_properties( [==[Game is over and won when no more unopened free squares remain]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm solves trivial all-ones constraint]==] /home/lauri/algolab/tests/tests [==[Algorithm solves trivial all-ones constraint]==]  )
set_tests_properties( [==[Algorithm solves trivial all-ones constraint]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm solves trivial all-zeroes constraint]==] /home/lauri/algolab/tests/tests [==[Algorithm solves trivial all-zeroes constraint]==]  )
set_tests_properties( [==[Algorithm solves trivial all-zeroes constraint]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm simplifies constraint correctly when superset given first]==] /home/lauri/algolab/tests/tests [==[Algorithm simplifies constraint correctly when superset given first]==]  )
set_tests_properties( [==[Algorithm simplifies constraint correctly when superset given first]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm simplifies constraint correctly when subset given first]==] /home/lauri/algolab/tests/tests [==[Algorithm simplifies constraint correctly when subset given first]==]  )
set_tests_properties( [==[Algorithm simplifies constraint correctly when subset given first]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm solves a variable after simplifying constraints]==] /home/lauri/algolab/tests/tests [==[Algorithm solves a variable after simplifying constraints]==]  )
set_tests_properties( [==[Algorithm solves a variable after simplifying constraints]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm solves constraint after giving new information]==] /home/lauri/algolab/tests/tests [==[Algorithm solves constraint after giving new information]==]  )
set_tests_properties( [==[Algorithm solves constraint after giving new information]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[Algorithm cascades solutions through constraints]==] /home/lauri/algolab/tests/tests [==[Algorithm cascades solutions through constraints]==]  )
set_tests_properties( [==[Algorithm cascades solutions through constraints]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
add_test( [==[No false moves are made in 100 games]==] /home/lauri/algolab/tests/tests [==[No false moves are made in 100 games]==]  )
set_tests_properties( [==[No false moves are made in 100 games]==] PROPERTIES WORKING_DIRECTORY /home/lauri/algolab/tests)
set( tests_TESTS [==[Coord comparisons work correctly]==] [==[Coord sum works]==] [==[All neighbours are different]==] [==[Game can be generated with valid parameters]==] [==[Game cannot be generated with faulty parameters]==] [==[in_bounds works correctly]==] [==[Correct number of mines on board]==] [==[Seeded board generation works expectedly]==] [==[Game is over and lost when mined square is opened]==] [==[Game is not over when free square is opened]==] [==[Game is over and won when no more unopened free squares remain]==] [==[Algorithm solves trivial all-ones constraint]==] [==[Algorithm solves trivial all-zeroes constraint]==] [==[Algorithm simplifies constraint correctly when superset given first]==] [==[Algorithm simplifies constraint correctly when subset given first]==] [==[Algorithm solves a variable after simplifying constraints]==] [==[Algorithm solves constraint after giving new information]==] [==[Algorithm cascades solutions through constraints]==] [==[No false moves are made in 100 games]==])
